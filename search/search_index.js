const local_index = {"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Compax Navigation App Documentation Introduction - Project Overview: The Classroom Finder web app is a platform that allows users to search for available classrooms and make reservations in educational institutions. - Purpose of the Document: This document serves as a comprehensive guide for the development, deployment, and maintenance of the Classroom Finder app. - Document Conventions: N/A (Provide any specific document conventions, if applicable) Frontend Documentation User Interface Design Technology Stack and Frameworks Used Component Hierarchy and Structure State Management (e.g., Redux) Routing and Navigation Responsive Design and Mobile Responsiveness Form Validation and Error Handling Testing Approaches and Test Cases Performance Optimization Techniques Deployment Instructions Backend Documentation Architecture and System Design APIs and Endpoints Technology Stack Used Development Environment Setup Database Design and Schema Security Measures and Authentication Error Handling and Logging Testing Approaches and Test Cases Performance Optimization Techniques Deployment Instructions","title":"Welcome to Compax Navigation App Documentation"},{"location":"#welcome-to-compax-navigation-app-documentation","text":"","title":"Welcome to Compax Navigation App Documentation"},{"location":"#introduction","text":"- Project Overview: The Classroom Finder web app is a platform that allows users to search for available classrooms and make reservations in educational institutions. - Purpose of the Document: This document serves as a comprehensive guide for the development, deployment, and maintenance of the Classroom Finder app. - Document Conventions: N/A (Provide any specific document conventions, if applicable)","title":"Introduction"},{"location":"#frontend-documentation","text":"User Interface Design Technology Stack and Frameworks Used Component Hierarchy and Structure State Management (e.g., Redux) Routing and Navigation Responsive Design and Mobile Responsiveness Form Validation and Error Handling Testing Approaches and Test Cases Performance Optimization Techniques Deployment Instructions","title":"Frontend Documentation"},{"location":"#backend-documentation","text":"Architecture and System Design APIs and Endpoints Technology Stack Used Development Environment Setup Database Design and Schema Security Measures and Authentication Error Handling and Logging Testing Approaches and Test Cases Performance Optimization Techniques Deployment Instructions","title":"Backend Documentation"},{"location":"new/","text":"For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"New"},{"location":"new/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"new/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}; var __search = { index: Promise.resolve(local_index) }